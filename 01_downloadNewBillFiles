#!/usr/bin/perl

require "cmds.pl";

%options = &readOptions;

$session = $options{"session"};

sub dprint {
    if (defined($verbose)) { print $_[0]; }
}

for ($idx = 0; $idx < scalar(@ARGV); $idx++) {
    if ($ARGV[$idx] eq "-s") { $session = $ARGV[$idx+1]; }
    if ($ARGV[$idx] eq "-v") { $verbose = 1; }
    if ($ARGV[$idx] eq "-q") { $quiet = 1; }
    if ($ARGV[$idx] eq "-f") { $billFile = $ARGV[$idx+1]; }
    if ($ARGV[$idx] eq "-d") { $overDate = $ARGV[$idx+1]; }
}

if (defined($overDate)) {
    $d = $overDate;
} else {
    $d = `date '+%Y%m%d_%H%M%S'`; chomp($d);
}

if (! defined($billFile)) {

    if (! defined($overDate) || ( ! -f "/tmp/legDirs_".$d.".txt")) {

        open FTP, "| /usr/bin/ftp leginfo.public.ca.gov > /tmp/legDirs_".$d.".txt";
        print FTP "ls pub/".$session."/bill/asm\n";
        print FTP "ls pub/".$session."/bill/sen\n";
        print FTP "quit\n";
        close FTP;
    }

    open F, "/tmp/legDirs_".$d.".txt";
    @dirLines = <F>;
    chomp(@dirLines);
    close F;

    &dprint("/tmp/legDirs_".$d.".txt\n");

    if (! defined($overDate) || ( ! -f "/tmp/legBills_".$d.".txt")) {

        foreach (@dirLines) {
            @p = split ' ', $_;
            $last = pop @p;
            if ($last =~ /^ab_/) { push @dirs, "pub/".$session."/bill/asm/".$last; }
            if ($last =~ /^sb_/) { push @dirs, "pub/".$session."/bill/sen/".$last; }
        }

        open FTP, "| /usr/bin/ftp leginfo.public.ca.gov > /tmp/legBills_".$d.".txt";
        print FTP "verbose\n";
        foreach (@dirs) { print FTP "set ".$_." foo\nls ".$_."\n"; }
        print FTP "quit\n";
        close FTP;
    }

    &dprint("/tmp/legBills_".$d.".txt\n");

    open F, "/tmp/legBills_".$d.".txt";
    @fileLines = <F>;
    chomp(@fileLines);
    close F;

    foreach (@fileLines) {
        $line = $_;

        if ($line =~ /^No such option \`(.*)\'\./) { $dir = $1; }

        if ($line =~ /^\-r/ && $line =~ /\.html$/) {
            @p = split ' ', $line;
            $file = pop @p;
            $remoteFiles{"leginfo.public.ca.gov/".$dir."/".$file} = 1;
        }
    }

    print "Remote bills found # ".scalar(keys %remoteFiles)."\n";

    open F, ">/tmp/legBillRemotes_".$d.".txt";
    foreach (keys %remoteFiles) { print F $_."\n"; }
    close F;
    &dprint("/tmp/legBillRemotes_".$d.".txt\n");

    $cmd = "/usr/bin/find ".$billDir."/".$session."/bill -type f";
    @localFiles = `$cmd`;
    chomp(@localFiles);
    print "Local bills found # ".scalar(@localFiles)."\n";

    open F, ">/tmp/legBillLocal_".$d.".txt";
    foreach (@localFiles) { print F $_."\n"; }
    close F;
    &dprint("/tmp/legBillLocal_".$d.".txt\n");

    foreach (@localFiles) { delete $remoteFiles{$_}; }

    open F, ">/tmp/legBillAddable_".$d.".txt";
    foreach (keys %remoteFiles) { print F $_."\n"; }
    close F;
    &dprint("/tmp/legBillAddable_".$d.".txt\n");

    open FTP, "| /usr/bin/ftp -V leginfo.public.ca.gov";
    #open FTP, "| /usr/bin/ftp leginfo.public.ca.gov";
    #open FTP, ">ftpCmds.txt";

    print FTP "lcd leginfo.public.ca.gov\n";

    $lastDir = "";

    @dirs = sort keys %remoteFiles;

    @p = split '/', $dirs[0];
    shift @p;
    pop @p;
    $dir = join '/', @p;
    $lastDir = $dir;

    print FTP "cd ".$dir."\n";
    print FTP "lcd ".$dir."\n";

    foreach (@dirs) {
        @p = split '/', $_;
        shift @p;
        $file = pop @p;
        $dir = join '/', @p;

        if ($dir ne $lastDir) {
            print FTP "cd ../../../../../".$dir."\n";
            print FTP "lcd ../../../../../".$dir."\n";
            print FTP "get ".$file."\n";
            $lastDir = $dir;
        } else {
            print FTP "get ".$file."\n";
        }
    }
    print FTP "quit\n";
    close FTP;
}

exit(0);

# Locate the remote directory list for this session.
#
$cmd = $lynx." http://leginfo.public.ca.gov/pub/".$session."/bill/index_assembly_bill_author_topic ; ".
       $lynx." http://leginfo.public.ca.gov/pub/".$session."/bill/index_senate_bill_author_topic";
&dprint("\ncmd: \"".$cmd."\"\n");
@lines = `$cmd`;
chomp(@lines);

foreach (@lines) {
    $line = $_;
    print $line."\n";
}

if (defined($verbose)) { print "\nREMOTE DIRS:\n".(join "\n", @remoteDirs)."\n\n"; }

exit(0);

# Get the local directory list for this session.
#
$cmd = "/usr/bin/find ".$billDir."/".$session."/bill -type d";
@lines = `$cmd`;
chomp(@lines);

foreach (@lines) { $localDir{$_} = 1; }

# Check for missing directories;
#
foreach (@remoteDirs) {
    $remote = $_;
    $remote =~ s/ftp:\/\///;
    if (! defined($localDir{$remote})) { $cmd = "mkdir -p ".$remote."\n"; print `$cmd`; }
}

foreach (@remoteDirs) {
    $cmd = $lynx." ".$_."\n";
    push @files, `$cmd`;
}

chomp(@files);

foreach (@files) { if (/\.html$/) { @p = split ' ', $_; push @html, pop @p; } }

undef @files;

print "\nFound remote files # ".scalar(@html)."\n";

foreach (@html) {
    $html = $_;

    $file = $html;
    $file =~ s/^ftp:\/\///;
    $gzFile = $file.".gz";

    if ( ! -f $file && ! -f $gzFile) {
        push @files, $file;
    }
}

print "\nNeed to fetch files # ".(scalar(@files))."\n";

print "\n";

foreach (@files) {
    print $_."\n";
}

print "Done.\n\n";

open C, ">.count";
print C scalar(@files)."\n";
close C;

undef @ftp;

foreach (@files) {
    $file = $_;

    @p = split '/', $file;

    shift @p; shift @p;

    $fileName = pop @p;

    $dir = join '/', @p;

    push @ftp, "cd ".$dir;
    push @ftp, "lcd ".$dir;
    push @ftp, "get ".$fileName;
    push @ftp, "cd ../../../..";
    push @ftp, "lcd ../../../..";
}

if (scalar(@ftp) > 0) {

    open FTP, "| /usr/bin/ftp leginfo.public.ca.gov";
    print FTP "cd pub\n";
    print FTP "lcd leginfo.public.ca.gov/pub\n";
    foreach (@ftp) { print FTP $_."\n"; }
    close FTP;
}

# pub/11-12/bill/sen/sb_1551-1600/sb_1570_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1570_bill_20120509_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1571_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1571_bill_20120924_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1572_bill_20120918_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1573_bill_20120227_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1573_bill_20120322_status.html
# pub/11-12/bill/sen/sb_1551-1600/sb_1574_bill_20120710_status.html

print "\n";

exit(0);

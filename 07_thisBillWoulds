#!/usr/bin/perl

require "cmds.pl";

%options = &readOptions;

$session = $options{"session"};

for ($idx = 0; $idx < scalar(@ARGV); $idx++) {
    if ($ARGV[$idx] eq "-s") { $session = $ARGV[$idx+1]; }
    if ($ARGV[$idx] eq "-v") { $verbose = 1; }
}

@needed = &doSqlResults("select v1.pk, v1.file from bill_versions v1 left join bill_woulds w1 on v1.pk = w1.bill_version_pk where w1.sentence is NULL;");
chomp(@needed);

foreach (@needed) {
    ($pk, $file) = split '\t', $_;
    $version{$pk} = $file;
    $file{$file} = $pk;
    # print "file: \"".$file."\" -> pk: ".$pk."\n";
}

print "\nFound bill versions needing TBWs # ".scalar(@needed)."\n";

$maxPk = &doSqlResult("select max(pk) from bill_woulds;");
if (($maxPk eq "") || ($maxPk eq "NULL")) { $maxPk = 0; }

$pk = $maxPk + 1;

foreach (keys %file) {
    $file = $_;

    $versionPk = $file{$file};

    open F, "leginfo.public.ca.gov/pub/".$file;
    @lines = <F>;
    chomp(@lines);

    for ($idx = 0; $idx < scalar(@lines); $idx++) {
        if ($lines[$idx] eq "") { $lines[$idx] = "."; }
        if ($lines[$idx] =~ /be it$/) { $lines[$idx] .= "."; }
        if ($lines[$idx] =~ /be it further$/) { $lines[$idx] .= "."; }
    }

    $allLines = join ' ', @lines;

    $allLines =~ s/<em>//g;
    $allLines =~ s/<\/em>//g;

    $allLines =~ s/  */ /g;

    @lines = split '\.', $allLines;

    for ($idx = 0; $idx < scalar(@lines); $idx++) { $lines[$idx] =~ s/^ *//; $lines[$idx] .= "."; }

    # if ($file =~ /sr_8_bill_20130109_introduced.html/) { for ($idx = 0; $idx < scalar(@lines); $idx++) { print "[".$idx."] = \"".$lines[$idx]."\"\n"; }}

    foreach (@lines) {
        $line = $_;

        $line =~ s/'/''/g;

        # print "line: \"".$line."\"\n";

        if (($line =~ /^This bill/ && $line =~ /would/) ||

            ($line =~ /^The bill would/) ||
            ($line =~ /^This measure would/) ||
            ($line =~ /^With specified exceptions, this bill would/) ||
            ($line =~ /^This measure states/) ||
            ($line =~ /^This bill states/) ||
            ($line =~ /^Resolved/)) {

            # terminate any <strike> or <em> tags that are not balanced within the sentence.

            $strikeCount = 0;
            $idx = 0;
            while (index($line, "<strike>", $idx) > 0) {
                $strikeCount++;
                $idx = index($line, "<strike>", $idx) + 1;
            }

            while (index($line, "<\\strike>", $idx) > 0) {
                $strikeCount--;
                $idx = index($line, "<\\strike>", $idx) + 1;
            }

            for ($idx = 0; $idx < $strikeCount; $idx++) { $line .= "</strike>"; }

            $emCount = 0;
            $idx = 0;
            while (index($line, "<em>", $idx) > 0) {
                $emCount++;
                $idx = index($line, "<em>", $idx) + 1;
            }

            while (index($line, "<\\em>", $idx) > 0) {
                $emCount--;
                $idx = index($line, "<\\em>", $idx) + 1;
            }

            for ($idx = 0; $idx < $emCount; $idx++) { $line .= "</em>"; }

            push @sql, "insert into bill_woulds (pk, bill_version_pk, sentence) values (".$pk.",".$versionPk.",'".$line."');\n";
            $pk++;
        }
    }
}

print "\nSentences to add # ".scalar(@sql)."\n";

open M, "| ".&mysql;
foreach (@sql) { print M $_; }
# foreach (@sql) { print $_; }
close M;

print "\n";
exit(0);
